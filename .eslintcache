[{"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/index.js":"1","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/reportWebVitals.js":"2","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/App.js":"3","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Body.js":"4","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Text.js":"5","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Image.js":"6","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Grid.js":"7","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/AddBtn.js":"8","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/Test.js":"9","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Row.js":"10","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/ModalAddRow.js":"11","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Column.js":"12","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/ModalAddElementToColumn.js":"13","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/moduleELementTypes.js":"14","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Variable.js":"15","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/strore.js":"16","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/index.js":"17","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionTypes.js":"18","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/modalsReducer.js":"19","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionsModals.js":"20","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RemoveBtn.js":"21","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/contractDomReducer.js":"22","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionsContractDom.js":"23","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RenderRow.js":"24","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/ButtonToPrint.js":"25","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/ComponentToPrint.js":"26","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/customeHooks/useContractVirtualDom.js":"27","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Row.js":"28","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Component.js":"29","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/renders/RenderELemenBYType.js":"30","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Text.js":"31","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Variable.js":"32","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Image.js":"33","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RenderElement.js":"34","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Signature.js":"35","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Signature.js":"36"},{"size":620,"mtime":1612703169952,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1606209599230,"results":"39","hashOfConfig":"38"},{"size":1807,"mtime":1613416746945,"results":"40","hashOfConfig":"38"},{"size":583,"mtime":1613316806377,"results":"41","hashOfConfig":"38"},{"size":1936,"mtime":1613578600777,"results":"42","hashOfConfig":"38"},{"size":211,"mtime":1613158579478,"results":"43","hashOfConfig":"38"},{"size":290,"mtime":1612341481354,"results":"44","hashOfConfig":"38"},{"size":552,"mtime":1613327721228,"results":"45","hashOfConfig":"38"},{"size":1757,"mtime":1612452558464,"results":"46","hashOfConfig":"38"},{"size":1334,"mtime":1613414470499,"results":"47","hashOfConfig":"38"},{"size":2042,"mtime":1613327327877,"results":"48","hashOfConfig":"38"},{"size":2507,"mtime":1613578600776,"results":"49","hashOfConfig":"38"},{"size":1708,"mtime":1613578600774,"results":"50","hashOfConfig":"38"},{"size":156,"mtime":1613578600775,"results":"51","hashOfConfig":"38"},{"size":3608,"mtime":1613415449053,"results":"52","hashOfConfig":"38"},{"size":281,"mtime":1612703292268,"results":"53","hashOfConfig":"38"},{"size":185,"mtime":1612813696353,"results":"54","hashOfConfig":"38"},{"size":489,"mtime":1613241432493,"results":"55","hashOfConfig":"38"},{"size":351,"mtime":1613316844328,"results":"56","hashOfConfig":"38"},{"size":133,"mtime":1612724562836,"results":"57","hashOfConfig":"38"},{"size":1182,"mtime":1613578600774,"results":"58","hashOfConfig":"38"},{"size":4175,"mtime":1613241910797,"results":"59","hashOfConfig":"38"},{"size":2793,"mtime":1613578600779,"results":"60","hashOfConfig":"38"},{"size":371,"mtime":1613328205651,"results":"61","hashOfConfig":"38"},{"size":686,"mtime":1613578600777,"results":"62","hashOfConfig":"38"},{"size":421,"mtime":1613416830586,"results":"63","hashOfConfig":"38"},{"size":1828,"mtime":1613242429442,"results":"64","hashOfConfig":"38"},{"size":514,"mtime":1613242558881,"results":"65","hashOfConfig":"38"},{"size":277,"mtime":1613242598757,"results":"66","hashOfConfig":"38"},{"size":496,"mtime":1613578600778,"results":"67","hashOfConfig":"38"},{"size":196,"mtime":1613578472451,"results":"68","hashOfConfig":"38"},{"size":1101,"mtime":1613243549185,"results":"69","hashOfConfig":"38"},{"size":211,"mtime":1613243624029,"results":"70","hashOfConfig":"38"},{"size":876,"mtime":1613576810681,"results":"71","hashOfConfig":"38"},{"size":1419,"mtime":1613577468227,"results":"72","hashOfConfig":"38"},{"size":272,"mtime":1613577630323,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ls7efx",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/index.js",[],["161","162"],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/reportWebVitals.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/App.js",["163"],"import React, { useRef } from 'react'\nimport './App.css';\nimport Body from './components/elements/Body'\nimport ModalAddRow from './components/common/ModalAddRow'\nimport ModalAddElementToColumn from './components/common/ModalAddElementToColumn'\nimport ButtonToPrint from './components/print/ButtonToPrint'\nimport { Button, Container, Row, Col } from 'react-bootstrap'\n\nfunction App() {\n  const HtmlMirror = () => {\n    return <Body />\n  }\n\n  const _handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('submit html structure to server')\n  }\n\n  return (\n    <div style={{\n      width: '100 %',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }}\n    >\n      <p>Contract builder</p>\n      <div style={{\n        width: \"70%\",\n        minHeight: \"100vh\",\n        backgroundColor: '#fff',\n        padding: \"0 15px\",\n      }}>\n        <form onSubmit={_handleSubmit}>\n          <HtmlMirror />\n          <Container fluid>\n            <Row style={{\n              isplay: \"flex\",\n              minHeight: \"80px\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>\n               <Col style={{\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}>\n                <ButtonToPrint />\n              </Col>\n              <Col style={{\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}>\n                <Button type=\"submit\" variant=\"outline-light\" style={{ backgroundImage: \"linear-gradient(to right,orange,red)\"}}>Save Contract</Button>\n              </Col>\n            </Row>\n          </Container>\n\n        </form>\n        <ModalAddRow />\n        <ModalAddElementToColumn />\n\n        {/* <Test /> */}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Body.js",["164"],"import React, { useContext } from 'react'\nimport RenderRow from '../common/RenderRow'\nimport AddBtn from '../common/AddBtn'\n\nconst Body = () => {\n    return (\n        <div style={{\n            width: \"100%\",\n            backgroundColor: \"rgb(255,255,255)\",\n            border: \"1px solid lightgrey\",\n            minHeight: '100px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center'\n            }}>\n            <RenderRow />\n            <AddBtn row/>\n        </div>\n    )\n}\n\nexport default Body\n\n\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Text.js",["165"],"import React, { useContext, useState } from \"react\";\nimport { editElementText, removeElement } from '../../redux/actionsContractDom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CheckCircle, XCircle, Trash2} from 'react-bootstrap-icons'\n\nconst Text = ({ elementId }) => {\n    const _element = useSelector(state => state.contractDom.elements[elementId])\n    const dispatch = useDispatch()\n    const [editMode, setEditMode] = useState(false)\n    const [inputValue, setValue] = useState(_element.content)\n\n    const _handelChange = (e) => {\n        e.preventDefault()\n        setValue(e.target.value)\n    }\n\n    const _handleSave = () => {\n        if (!inputValue.length) {\n            return alert('text cant be empty')\n        }\n        console.log('save action')\n        dispatch(editElementText(elementId, inputValue))\n        setEditMode(!editMode)\n    }\n\n    const _handleDoubleClick = () => {\n        if (!editMode) {\n            setEditMode(!editMode)\n        }\n    }\n\n    const _close = () => {\n        if (editMode) {\n            setEditMode(!editMode)\n        }\n    }\n\n    const _delete = () => {\n        dispatch(removeElement(_element.id, _element.columnId))\n    }\n\n    return (\n        <div onDoubleClick={_handleDoubleClick} onBlur={() => console.log('onBlur')} >\n            {editMode ?\n                <div style={{display: 'flex'}}> \n                    <input name={_element.id} onChange={_handelChange} placeholder={_element.content} value={inputValue} />\n                    <div onClick={_handleSave} style={{margin: '0 5px'}}><CheckCircle width='20' height='20' /></div>\n                    <div onClick={_close} style={{margin: '0 5px'}}><XCircle width='20' height='20' /></div>\n                    <div onClick={_delete} style={{margin: '0 5px'}}><Trash2 width='22' height='22' /></div>\n                </div>\n                : <p>{inputValue}</p>}\n\n        </div>\n\n    )\n}\n\nexport default Text\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Image.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Grid.js",[],["166","167"],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/AddBtn.js",["168"],"import React, { useContext } from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { toggleAddRow } from '../../redux/actionsModals'\nimport { ViewList } from 'react-bootstrap-icons';\nimport { Button } from 'react-bootstrap'\n\nconst AddBtn = () => {\n    const dispatch = useDispatch()\n    return (\n        <Button variant=\"outline-light\"   style={{margin: '25px 0', backgroundColor: '#ADD8E5', color: 'grey'}} onClick={() => dispatch(toggleAddRow())} id={'123'}>\n            <ViewList /> Add Row\n        </Button>\n    )\n}\n\nexport default AddBtn\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/Test.js",[],["169","170"],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Row.js",["171","172","173"],"import React, { useContext } from \"react\";\nimport { HtmlContext } from '../../App'\nimport { useSelector } from 'react-redux'\nimport AddBtn from '../common/AddBtn'\nimport RemoveElementBtn from '../common/RemoveBtn'\nimport Column from '../elements/Column'\n\nconst Row = ({ rowId }) => {\n    const _row = useSelector(state => state.contractDom.rows[rowId])\n    console.log('_row', _row)\n    return (\n        <div style={{\n            width: \"100%\",\n            minHeight: \"50px\",\n        }}>\n            <div style={{\n                minHeight: \"30px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                padding: \"0px 10px\",\n            }}>\n                <RemoveElementBtn row rowId={rowId} />\n            </div>\n\n            <div\n                style={{\n                    width: \"100%\",\n                    minHeight: \"50px\",\n                    display: \"flex\",\n                    alignItems: \"flexStart\",\n                    justifyContent: \"space-around\"\n                }}\n            >\n                {_row.columns.map((columnId) => {\n                    console.log('columnId', columnId)\n\n                    return <Column key={columnId} columnId={columnId} />\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Row\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/ModalAddRow.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Column.js",["174"],"import Rect, { useEffect, useState } from 'react'\nimport RemoveBtn from '../common/RemoveBtn'\nimport ModalAddElementToColumn from '../common/ModalAddElementToColumn'\nimport ELEMENTTYPE from '../common/moduleELementTypes'\nimport Text from './Text'\nimport Variable from './Variable'\nimport Image from './Image'\nimport { useSelector } from 'react-redux'\nimport { PlusCircle } from 'react-bootstrap-icons'\n\nconst RenderElementByType = ({ elementId }) => {\n    const _type = useSelector(state => state.contractDom.elements[elementId].type)\n    switch (_type) {\n        case ELEMENTTYPE.text:\n            return <Text elementId={elementId} />\n        case ELEMENTTYPE.img:\n            return <Image elementId={elementId} />\n        case ELEMENTTYPE.variable:\n            return <Variable elementId={elementId} />\n        default:\n            return <p>Element type not found</p>\n    }\n}\n\nconst Column = ({ columnId }) => {\n    const _column = useSelector(state => state.contractDom.columns[columnId])\n    const _elementsIds = _column?.elements\n    const _row = useSelector(state => state.contractDom.rows[_column?.rowId])\n    const numOfColumnsInRow = _row?.numOfColumns\n    useEffect(() => console.log('_column', _column), [_column])\n    const [modalOpen, setModalOpen] = useState(false)\n\n    return (\n        <div\n            style={{\n                minHeight: \"40px\",\n                width: \"100%\",\n                height: \"100%\",\n            }}>\n\n            <div style={{\n                minHeight: \"30px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                padding: \"0px 10px\",\n            }}>\n                <div onClick={() => setModalOpen(!modalOpen)}><PlusCircle width='20' height='20' style={{ color: '#FF5C04', marginRight: '15px' }} /> </div>\n                {\n                    numOfColumnsInRow > 1 &&\n                    <RemoveBtn columnId={columnId} rowId={_row.id} column={true} />\n                }\n            </div>\n            {_elementsIds?.map((elementId, index) => <RenderElementByType key={elementId} elementId={elementId} />)}\n            <div style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                minHeight: \"inherit\",\n            }}>\n            </div>\n            <ModalAddElementToColumn open={modalOpen} columnId={columnId} onClick={() => setModalOpen(!modalOpen)} />\n        </div>\n    )\n}\nexport default Column","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/ModalAddElementToColumn.js",["175","176","177","178"],"import React from \"react\";\nimport ELEMENTTYPE from './moduleELementTypes'\nimport { addElement } from '../../redux/actionsContractDom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button, Row, Col, Container } from 'react-bootstrap'\nimport { FileFont, FileImage, FileEarmarkMedical } from 'react-bootstrap-icons'\n\nconst ModalAddElementToColumn = ({ open, onClick, columnId }) => {\n    const dispatch = useDispatch()\n    const _handleClose = () => onClick()\n    const _addElement = (type) => {\n        dispatch(addElement(type, columnId))\n        _handleClose()\n    }\n\n    return (\n        <Modal show={open} animation={false} onHide={_handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add Element</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ display: \"flex\", flexDirection: 'column' }}>\n                <div onClick={() => _addElement(ELEMENTTYPE.text)} style={{display: 'flex', alignItems: \"center\", margin: '15px 0'}}><FileFont width='20' height='20' /> Add Text</div>\n                <div onClick={() => _addElement(ELEMENTTYPE.img)} style={{display: 'flex', alignItems: \"center\", margin: '15px 0'}}><FileImage width='20' height='20' />  Add Image</div>\n                <div onClick={() => _addElement(ELEMENTTYPE.variable)}style={{display: 'flex', alignItems: \"center\", margin: '15px 0'}}><FileEarmarkMedical width='20' height='20' /> Add Varibale</div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={_handleClose}>\n                    Close\n          </Button>\n            </Modal.Footer>\n        </Modal >\n    )\n}\n\n\n\nexport default ModalAddElementToColumn\n","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/moduleELementTypes.js",["179"],"import React from 'react';\n\n const ELEMENTTYPE = {\n    row: 'row',\n    text: 'text',\n    variable: 'variable',\n    img: 'img'\n}\n\nexport default ELEMENTTYPE;","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Variable.js",["180"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { removeElement, editElementVariable } from '../../redux/actionsContractDom'\nimport { CheckCircle, XCircle, Trash2 } from 'react-bootstrap-icons'\n\nconst VARIABLETYPES = {\n    empty: 'empty',\n    userName: 'userName',\n    fullName: 'fullName',\n    phone: 'phone',\n    address: 'address',\n    accountBalance: 'accountBalance',\n    paymentNow: 'paymentNow',\n    product: 'product',\n    storeName: 'storeName',\n    agentName: 'agentName'\n}\n\nconst Variable = ({ elementId }) => {\n    const _element = useSelector(state => state.contractDom.elements[elementId])\n    const dispatch = useDispatch()\n    const [editMode, setEditMode] = useState(false)\n    const [selectValues, setSelectValues] = useState([])\n    const [inputsValues, setValue] = useState({\n        title: _element.title,\n        key: _element.key,\n        value: _element.value\n    })\n\n    useEffect(() => {\n        const selectValuesToArr = Object.keys(VARIABLETYPES)\n        setSelectValues([...selectValuesToArr])\n    }, [])\n\n    const _handelChangeTitle = (e) => {\n        e.preventDefault()\n        const newObj = { ...inputsValues }\n        newObj.title = e.target.value\n        setValue({ ...newObj })\n    }\n\n\n    const _handelChangeKey = (e) => {\n        e.preventDefault()\n        console.log('e target', e.target.value)\n        let newObj = { ...inputsValues }\n        newObj = { ...inputsValues, key: e.target.value }\n        setValue({ ...newObj })\n    }\n\n    const _handleSave = () => {\n        if (!inputsValues.title.length) {\n            return alert('text cant be empty')\n        }\n        dispatch(editElementVariable(_element.id, inputsValues))\n        setEditMode(!editMode)\n    }\n\n    const _handleDoubleClick = () => {\n        if (!editMode) {\n            setEditMode(!editMode)\n        }\n        console.log('_handleDoubleClick undefined')\n    }\n\n    const _close = () => {\n        if (editMode) {\n            setEditMode(!editMode)\n        }\n    }\n\n    const _delete = () => {\n        dispatch(removeElement(_element.id, _element.columnId))\n    }\n\n    return (\n        <div onDoubleClick={_handleDoubleClick}>\n            {\n                editMode ?\n                    <div >\n                        <input name={_element.id} onChange={_handelChangeTitle} placeholder={inputsValues.title} value={inputsValues.title} />\n                        <div style={{ display: 'flex' }}>\n                            <select onChange={_handelChangeKey} value={inputsValues.key} >\n                                {selectValues.map(option => <option key={Math.random() * 1000} >{option}</option>)}\n                            </select>\n                            <div onClick={_handleSave} style={{ margin: '0 5px' }}><CheckCircle width='20' height='20' /></div>\n                            <div onClick={_close} style={{ margin: '0 5px' }}><XCircle width='20' height='20' /></div>\n                            <div onClick={_delete} style={{ margin: '0 5px' }}><Trash2 width='22' height='22' /></div>\n                        </div>\n                    </div>\n                    : (\n                        <div style={{ display: \"flex\" }}>\n                            <p >{inputsValues.title}</p>\n                            <p style={{\n                                marginLeft: \"30px\",\n                                fontWeight: \"bolder\",\n                            }}>{_element.key}</p>\n                        </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default Variable;","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/strore.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/index.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionTypes.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/modalsReducer.js",["181"],"import {TOGGLE_ADD_ROW} from '../actionTypes'\nconst initialState = {\n    addRow: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case TOGGLE_ADD_ROW:\n            return {\n                ...state,\n                addRow: !state.addRow\n            }\n        default:\n            return state\n    }\n}","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionsModals.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RemoveBtn.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/reducers/contractDomReducer.js",["182"],"import {\n    ADD_ROW,\n    REMOVE_ROW,\n    REMOVE_COLUMN,\n    ADD_ELEMENT,\n    EDIT_ELEMENT_TEXT,\n    REMOVE_ELEMENT,\n    EDIT_ELEMENT_VARIABLE\n} from \"../actionTypes\"\n\nconst initialState = {\n    body: {\n        type: \"body\",\n        style: {},\n        rows: []\n    },\n    rows: {\n\n    },\n    columns: {\n\n    },\n    elements: {\n\n    }\n}\n\nconst addRow = (state, action) => {\n    return {\n        ...state,\n        body: {\n            ...state.body,\n            rows: [...state.body.rows, action.payload.row.id]\n        },\n        rows: {\n            ...state.rows,\n            [action.payload.row.id]: { ...action.payload.row }\n        },\n        columns: {\n            ...state.columns,\n            ...action.payload.columns\n        }\n    }\n}\n\nconst removeRow = (state, action) => {\n    const newState = Object.assign({}, state);\n    delete newState.rows[action.payload.rowId]\n    Object.keys(newState.columns).map(idColumn => {\n        if (newState.columns[idColumn].rowId === action.payload.rowId)\n            delete newState.columns[idColumn]\n        return\n    })\n    return {\n        ...state,\n        body: {\n            ...state.body,\n            rows: [...state.body.rows.filter(id => id !== action.payload.rowId)]\n        },\n        rows: { ...newState.rows },\n        colunms: { ...newState.columns }\n    }\n}\n\nconst removeColumn = (state, action) => {\n    const newState = Object.assign({}, state);\n    delete newState.columns[action.payload.columnId]\n    return {\n        ...state,\n        rows: {\n            ...state.rows,\n            [action.payload.rowId]: {\n                ...state.rows[action.payload.rowId],\n                numOfColumns: 1,\n                columns: [...state.rows[action.payload.rowId].columns.filter(id => id !== action.payload.columnId)]\n            }\n        },\n        columns: { ...newState.columns }\n    }\n}\n\nconst addElement = (state, action) => {\n    return {\n        ...state,\n        columns: {\n            ...state.columns,\n            [action.payload.columnId]: {\n                ...state.columns[action.payload.columnId],\n                elements: [\n                    ...state.columns[action.payload.columnId].elements,\n                    action.payload.element.id\n                ]\n            }\n        },\n        elements: {\n            ...state.elements,\n            [action.payload.element.id]: {\n                ...action.payload.element\n            }\n        }\n    }\n}\n\nconst editElementText = (state, action) => {\n    return {\n        ...state,\n        elements: {\n            ...state.elements,\n            [action.payload.id]: {\n                ...state.elements[action.payload.id],\n                content: action.payload.value\n            }\n        }\n    }\n}\n\nconst removeElement = (state, action) => {\n    const newState = Object.assign({}, state);\n    delete newState.elements[action.payload.id]\n    return {\n        ...state,\n        columns: {\n            ...state.columns,\n            [action.payload.columnId]: {\n                ...state.columns[action.payload.columnId],\n                elements: [...state.columns[action.payload.columnId].elements.filter(id => id !== action.payload.id)]\n            }\n        },\n        elements: { ...newState.elements }\n    }\n}\n\nconst editElementVariable = (state, action) => {\n    return {\n        ...state,\n        elements: {\n            ...state.elements,\n            [action.payload.id]: {\n                ...state.elements[action.payload.id],\n                title: action.payload.value.title,\n                key: action.payload.value.key\n            }\n        }\n    }\n}\n\n\n\nexport default function contractDom(state = initialState, action) {\n    switch (action.type) {\n        case ADD_ROW: return addRow(state, action)\n        case REMOVE_ROW: return removeRow(state, action)\n        case REMOVE_COLUMN: return removeColumn(state, action)\n        case ADD_ELEMENT: return addElement(state, action)\n        case EDIT_ELEMENT_TEXT: return editElementText(state, action)\n        case REMOVE_ELEMENT: return removeElement(state, action)\n        case EDIT_ELEMENT_VARIABLE: return editElementVariable(state, action)\n        default:\n            return state\n    }\n}","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/redux/actionsContractDom.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RenderRow.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/ButtonToPrint.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/ComponentToPrint.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/customeHooks/useContractVirtualDom.js",["183","184","185"],"import { fromPairs } from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport {cloneDeep} from 'lodash'\n\nconst useContractVirtualDom = () => {\n    const body = useSelector(state => state.contractDom.body)\n    const rows = useSelector(state => state.contractDom.rows)\n    const columns = useSelector(state => state.contractDom.columns)\n    const elements = useSelector(state => state.contractDom.elements)\n    const [cVDom, setCVDom ] = useState(body)\n\n\n    useEffect(() => {\n        setCVDom(buildDom())\n    }, [body, rows, columns, elements])\n\n\n    const buildDom = () => {\n        let vdom = cloneDeep(body)\n        let _rows = cloneDeep(rows)\n        let _columns = cloneDeep(columns)\n        let _elements = cloneDeep(elements)\n        vdom.rows = vdom.rows.map(rowOrId =>{\n            if(typeof rowOrId === 'string'){\n                return _rows[rowOrId]\n            }\n            else return _rows[rowOrId.id]\n        } )\n        vdom.rows.forEach(row => {\n            row.columns = row.columns.map(columnId => {\n                if(typeof columnId === 'string'){\n                    return _columns[columnId]\n                }\n                else return  _columns[columnId.id]\n            })\n        });\n        vdom.rows.forEach(row => {\n            row.columns?.forEach(column => {\n                if(column?.elements){\n                    column.elements = column.elements.map(elementOrId =>{\n                        if(typeof elementOrId === 'string'){\n                            return _elements[elementOrId]\n                        }\n                        else return _elements[elementOrId.id] \n                    } )\n                }\n            });\n        })\n        return vdom\n    }\n    \n    return cVDom\n};\n\nexport default useContractVirtualDom;","/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Row.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Component.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/renders/RenderELemenBYType.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Text.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Variable.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Image.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/common/RenderElement.js",[],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/elements/Signature.js",["186","187","188"],"/Users/iradkotton/WebstormProjects/contractG/builder/contract-builder/src/components/print/components/Signature.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":23},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"189","replacedBy":"198"},{"ruleId":"191","replacedBy":"199"},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"189","replacedBy":"200"},{"ruleId":"191","replacedBy":"201"},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"193","severity":1,"message":"202","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"203","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"204","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":12},{"ruleId":"193","severity":1,"message":"205","line":4,"column":23,"nodeType":"195","messageId":"196","endLine":4,"endColumn":34},{"ruleId":"193","severity":1,"message":"206","line":5,"column":25,"nodeType":"195","messageId":"196","endLine":5,"endColumn":28},{"ruleId":"193","severity":1,"message":"207","line":5,"column":30,"nodeType":"195","messageId":"196","endLine":5,"endColumn":33},{"ruleId":"193","severity":1,"message":"208","line":5,"column":35,"nodeType":"195","messageId":"196","endLine":5,"endColumn":44},{"ruleId":"193","severity":1,"message":"209","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"197","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":37},{"ruleId":"210","severity":1,"message":"211","line":6,"column":1,"nodeType":"212","endLine":16,"endColumn":2},{"ruleId":"213","severity":1,"message":"214","line":52,"column":9,"nodeType":"215","messageId":"216","endLine":52,"endColumn":15},{"ruleId":"193","severity":1,"message":"217","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":19},{"ruleId":"193","severity":1,"message":"209","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":16,"column":8,"nodeType":"220","endLine":16,"endColumn":39,"suggestions":"221"},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"193","severity":1,"message":"222","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":25},{"ruleId":"193","severity":1,"message":"223","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":21},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.",["224"],["225"],["224"],["225"],"'HtmlContext' is defined but never used.","'AddBtn' is defined but never used.","'Rect' is defined but never used.","'useSelector' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'fromPairs' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'buildDom'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'editElementText' is defined but never used.","'CheckCircle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [body, rows, columns, elements, buildDom]",{"range":"229","text":"230"},[569,600],"[body, rows, columns, elements, buildDom]"]